name: Release CI

on:
  push:
    branches: [release/**]
  pull_request:
    branches: [release/**]

jobs:
  validate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest Git tag
        id: get_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag is: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Extract version from CHANGELOG.md
        id: changelog
        run: |
          set +e  # Allow grep to fail
          VERSION=$(grep -E '^## \[[0-9]+\.[0-9]+\.[0-9]+\]' CHANGELOG.md | head -n1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          set -e

          if [ -z "$VERSION" ]; then
            echo "❌ Could not extract a version from the CHANGELOG."
            exit 1
          fi

          echo "✅ Found changelog version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        run: |
          python -c "from packaging.version import parse as v; n=v('0.1.0'); o=v('v0.1.0'.lstrip('v')); print(f'New: {n}, Old: {o}'); print('✅ OK' if n > o else '❌ FAIL'); exit(0) if n > o else exit(1)" 

  notify:
    if: always()
    needs: [validate-changelog]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "🚀 Release `${{ github.ref_name }}` published. CI passed! 🎉\nView run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Discord notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\":\"🚀 Release `${{ github.ref_name }}` passed CI! 🎉 <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
